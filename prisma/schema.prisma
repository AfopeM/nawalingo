// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid()) @db.Uuid
  email      String
  full_name  String?
  timezone   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  roles              UserRole[]
  studentPreferences StudentPreferences?
}

enum Role {
  student
  tutor
}

enum RoleStatus {
  pending
  approved
  suspended
}

model UserRole {
  id         String     @id @default(uuid()) @db.Uuid
  user_id    String     @db.Uuid
  role       Role
  status     RoleStatus @default(pending)
  created_at DateTime   @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model StudentPreferences {
  id                     String   @id @default(uuid()) @db.Uuid
  user_id                String   @unique @db.Uuid
  target_languages       String[]
  preferred_availability Json
  timezone               String
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  onboarding_completed   Boolean  @default(false)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
